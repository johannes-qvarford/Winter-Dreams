#ifndef INCLUDED_BUTTON
#define INCLUDED_BUTTON

#include "Widget.h"
#include <SFML/Graphics/Font.hpp>
#include <SFML/Graphics/Text.hpp>
#include <SFML/System/Vector2.hpp>
#include <SFML/Graphics/Texture.hpp>
#include <memory>

namespace sf{
	class Sound;
	class SoundBuffer;
};

////////////////////////////////////////////////////////////
// /A button is a graphical rectangle.
////////////////////////////////////////////////////////////
class Button : public Widget {

public:

	////////////////////////////////////////////////////////////
	// /Create a button with a texture, at a certain position.
	// /The filename, lacks the directory part.
	////////////////////////////////////////////////////////////
	Button(const sf::Vector2f& initialPosition, const std::string& buttonFilename);

	////////////////////////////////////////////////////////////
	// /Get the bounds of the button.
	////////////////////////////////////////////////////////////
	const sf::FloatRect& getBounds() const;

	////////////////////////////////////////////////////////////
	// /Get the bounds of the button´.
	////////////////////////////////////////////////////////////
	sf::FloatRect& getBounds();
	
	////////////////////////////////////////////////////////////
	// /Set the bounds of the widget.
	////////////////////////////////////////////////////////////
	virtual void setBounds(const sf::FloatRect& bounds);

	////////////////////////////////////////////////////////////
	// /Draw a texture.
	////////////////////////////////////////////////////////////
	void draw(sf::RenderTarget& target, sf::RenderStates states = sf::RenderStates()) const;

protected:

	std::shared_ptr<sf::Texture> mTexture_sp;
	
	sf::FloatRect mBounds;
};

#endif