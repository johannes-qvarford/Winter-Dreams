#ifndef INCLUDED_INVENTORY
#define INCLUDED_INVENTORY

#include <list>
#include <string>

class Inventory{
public:
	/////////////////////////////////////////////////////////
	// /Constructor
	/////////////////////////////////////////////////////////
	Inventory();
	/////////////////////////////////////////////////////////
    // /Returns the number of items you possess.
    /////////////////////////////////////////////////////////
	int hasItem(const std::string& item) const;
	/////////////////////////////////////////////////////////
    // /Add an item to the inventory.
    /////////////////////////////////////////////////////////
	void giveItem(const std::string& item);
    /////////////////////////////////////////////////////////
	// /Removes an item to the inventory.
    // /If the item hasn't been mapped, do nothing.
    /////////////////////////////////////////////////////////
	void takeItem(const std::string& item);
	/////////////////////////////////////////////////////////
	// /Equips the next item among the equipable items currently
	// /in the players inventory
    /////////////////////////////////////////////////////////
	void equipNext();
	/////////////////////////////////////////////////////////
	// Returns the name of the item currently
	// equiped. 
	// If there is no item equiped, returns ""
	/////////////////////////////////////////////////////////
	const std::string& getCurrentEquip() const;

private:
	std::list<std::string> mInventoryList;
	std::list<std::string>::iterator mCurrentItem;
};

#endif