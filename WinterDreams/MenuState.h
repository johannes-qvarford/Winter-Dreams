#ifndef INCLUDED_MENUSTATE
#define INCLUDED_MENUSTATE

#include "State.h"
#include <string>
#include <list>
#include <SFML/Graphics/Texture.hpp>

class Widget;

////////////////////////////////////////////////////////////
// /MenuState represents the main menu. 
////////////////////////////////////////////////////////////
class MenuState : public State{
public:
	////////////////////////////////////////////////////////////
	// /MenuStates constructor performs no actions
	////////////////////////////////////////////////////////////
	MenuState(std::string filePath);
	
	////////////////////////////////////////////////////////////
	// /MenuStates destructor performs no actions
	////////////////////////////////////////////////////////////
	~MenuState();
	
	////////////////////////////////////////////////////////////
	// /Each loop, if MenuState is the active state, update is called
	////////////////////////////////////////////////////////////
	void update();
	
	////////////////////////////////////////////////////////////
	// /Render the content of the MenuState. 
	////////////////////////////////////////////////////////////
	void render();
	
	void signalStartFa

	////////////////////////////////////////////////////////////
	// /Set the background image for the MenuState.
	////////////////////////////////////////////////////////////
	void setBackground(std::shared_ptr<sf::Texture> texture_sp);
	
	////////////////////////////////////////////////////////////
	// /Add a widget to the MenuState.
	////////////////////////////////////////////////////////////
	void addWidget(std::shared_ptr<Widget> widget_sp);

protected:

	std::list<std::shared_ptr<Widget> > mWidgets;

	std::shared_ptr<sf::Texture> mBackground_sp;

	////////////////////////////////////////////////////////////
	// /No copies
	////////////////////////////////////////////////////////////
	MenuState(const MenuState& menu);
	////////////////////////////////////////////////////////////
	// /No copies
	////////////////////////////////////////////////////////////
	MenuState& operator=(const MenuState& menu);
};

#endif